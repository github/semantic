-- Code generated by protoc-gen-haskell 0.1.0, DO NOT EDIT.
{-# LANGUAGE DerivingVia, DeriveAnyClass, DuplicateRecordFields #-}
{-# OPTIONS_GHC -Wno-unused-imports -Wno-missing-export-lists #-}
-- | Predefined timestamp message provided by Google. The schema can be found
-- <https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto here>.
module Proto3.Google.Timestamp (Timestamp (..)) where

import           Control.DeepSeq
import           Control.Monad (msum)
import qualified Data.Aeson as A
import qualified Data.Aeson.Encoding as E
import           Data.ByteString (ByteString)
import           Data.Int
import           Data.Text (Text)
import qualified Data.Text as T
import           Data.Vector (Vector)
import           Data.Word
import           GHC.Generics
import           Proto3.Suite (decodeMessageField, encodeMessageField, nestedvec, packedvec)
import qualified Proto3.Suite as Proto3
import           Proto3.Suite.JSONPB as JSONPB
import           Proto3.Wire (at, oneof)

data Timestamp = Timestamp
  { seconds :: Int64
  , nanos   :: Int32
  } deriving stock (Eq, Ord, Show, Generic)
    deriving anyclass (Proto3.Named, NFData)

instance FromJSONPB Timestamp where
  parseJSONPB = A.withObject "Timestamp" $ \obj -> Timestamp
    <$> obj .: "seconds"
    <*> obj .: "nanos"

instance ToJSONPB Timestamp where
  toJSONPB Timestamp{..} = object
    [
      "seconds" .= seconds
    , "nanos" .= nanos
    ]
  toEncodingPB Timestamp{..} = pairs
    [
      "seconds" .= seconds
    , "nanos" .= nanos
    ]

instance FromJSON Timestamp where
  parseJSON = parseJSONPB

instance ToJSON Timestamp where
  toJSON = toAesonValue
  toEncoding = toAesonEncoding

instance Proto3.Message Timestamp where
  encodeMessage _ Timestamp{..} = mconcat
    [
      encodeMessageField 1 seconds
    , encodeMessageField 2 nanos
    ]
  decodeMessage _ = Timestamp
    <$> at decodeMessageField 1
    <*> at decodeMessageField 2
  dotProto = undefined
